:root {
  --block-size: 30px;
  --border-size: 1px;
}

* {
  box-sizing: border-box;
}

body {
  margin: 0;

  background: #ffd94d;

  font-family: sans-serif;
}

input[type='file'],
input[type='checkbox'] {
  display: none;
}

button {
  font: inherit;
}

.screen {
  height: 100svh;

  display: flex;
  flex-direction: column;
}

.nav {
  --gap: 2rem;

  padding: calc(var(--gap) / 2) var(--gap);

  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: center;
  gap: var(--gap);
}

.button {
  border: solid var(--border-size) black;
  padding: 0.5em 1em;

  background-color: white;

  cursor: pointer;
  user-select: none;

  outline: initial;

  &:hover,
  &:focus {
    background-color: #f3f3f3;
  }

  &:active {
    background-color: #e0e0e0;
  }
}

.checkbox {
  user-select: none;
  cursor: pointer;
  --height: 1.5em;
  --width: 2.7em;

  > :first-child {
    box-sizing: content-box;
    height: var(--height);
    width: var(--width);
    display: inline-block;

    position: relative;

    border: solid black var(--border-size);
    border-radius: 1000px;

    background-color: white;

    &::before {
      content: '';
      display: inline-block;
      width: calc(var(--height) / 3 * 2);
      height: calc(var(--height) / 3 * 2);

      position: absolute;
      top: 50%;
      left: 0;
      translate: calc(var(--height) / 2) 0;
      transform: translate(-50%, -50%);

      border-radius: 1000px;

      background-color: black;

      transition: translate 100ms ease-out;
    }

    &:is(:checked + * > *) {
      background-color: #e0e0e0;

      &::before {
        translate: calc(var(--width) - var(--height) / 2) 0;
      }
    }
  }

  > :not(:first-child) {
    font-weight: bold;
  }
}

.canvas {
  height: 100%;

  background: radial-gradient(closest-side, #fffdf6, #ffd94d);
}

.struct {
  min-height: 100%;

  display: grid;
  grid-template: repeat(var(--rows, 2), var(--block-size)) / repeat(
      var(--cols, 1),
      var(--block-size)
    );
  gap: var(--border-size);

  justify-content: center;
  align-content: center;
}

.block {
  box-sizing: content-box;
  width: var(--block-size);
  height: var(--block-size);

  border: solid transparent var(--border-size);

  display: inline-block;
  position: relative;

  user-select: none;

  &:is(.struct *) {
    margin: calc(-1 * var(--border-size));
  }

  &.hover {
    position: fixed;
    z-index: 10;
    pointer-events: none;

    transition: top 10ms ease-out, left 10ms ease-out;
  }

  &.white {
    background: linear-gradient(to bottom, #d1d1d1, #fbfbfb, #d1d1d1);
  }

  &.red {
    background: linear-gradient(to bottom, #e63911, #f7a800, #e63911);
  }

  &.blue {
    background: linear-gradient(to bottom, #00a8e7, #b1dffa, #00a8e7);
  }

  &.white,
  &.red,
  &.blue {
    height: calc(2 * var(--block-size) + var(--border-size));

    border-color: black;

    z-index: 1;

    &:is(.struct *) {
      margin-bottom: calc(-1 * var(--block-size) + -2 * var(--border-size));
    }

    &::before,
    &::after {
      content: '';
      display: inline-block;

      width: calc(var(--block-size) / 2 - 2 * var(--border-size));
      height: calc(var(--block-size) / 2 - 2 * var(--border-size));

      border: var(--border-size) solid black;
      border-radius: 100%;
      clip-path: inset(0 0 0 calc(var(--block-size) / 4));

      position: absolute;
      left: calc(-1 * var(--block-size) / 4);

      background-color: black;
    }

    &::before {
      top: calc(var(--block-size) / 4);
    }

    &::after {
      bottom: calc(var(--block-size) / 4);
    }

    &.red:not(.flipped)::after,
    &.red.flipped::before {
      content: none;
    }

    &.activeTop::before,
    &.activeBot::after {
      background-color: white;
    }
  }

  &.light::after {
    content: '';
    display: inline-block;
    width: 100%;
    height: 100%;

    background: linear-gradient(to right, #e638116b, transparent 75%),
      linear-gradient(to bottom, #fbc100, #ffe600, #fbc100);
    clip-path: polygon(0% 24%, 72% 15%, 72% 85%, 0% 76%);
  }

  &.torch {
    background-image: url('assets/torch.svg');
    background-repeat: no-repeat;
    background-size: cover;

    &.active {
      background-image: url('assets/torch_active.svg');
    }
  }
}
